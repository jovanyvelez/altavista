#!/usr/bin/env python3
"""
Test para verificar el comportamiento del script con los datos espec√≠ficos:
| apartamento_id | a√±o_aplicable | mes_aplicable | monto    | concepto | tipo    |
| -------------- | ------------- | ------------- | -------- | -------- | ------- |
| 20             | 2025          | 1             | 72000.00 | 1        | DEBITO  |
| 20             | 2025          | 1             | 72000.00 | 5        | CREDITO |
"""

def test_escenario_especifico():
    """Simula el c√°lculo de intereses con los datos proporcionados"""
    
    print("="*80)
    print("TEST: ESCENARIO ESPEC√çFICO APARTAMENTO 20")
    print("="*80)
    
    print("\nüìä DATOS DE ENTRADA:")
    print("| apartamento_id | a√±o_aplicable | mes_aplicable | monto    | concepto | tipo    |")
    print("| -------------- | ------------- | ------------- | -------- | -------- | ------- |")
    print("| 20             | 2025          | 1             | 72000.00 | 1        | DEBITO  |")
    print("| 20             | 2025          | 1             | 72000.00 | 5        | CREDITO |")
    
    print("\nüßÆ C√ÅLCULO DE SALDO:")
    debito = 72000.00
    credito = 72000.00
    saldo_neto = debito - credito
    
    print(f"   D√âBITO:  ${debito:,.2f}")
    print(f"   CR√âDITO: ${credito:,.2f}")
    print(f"   SALDO NETO: ${saldo_neto:,.2f}")
    
    print("\nüéØ EVALUACI√ìN PARA GENERACI√ìN DE INTERESES (02/2025):")
    print("   Fecha l√≠mite: 2025-01-31")
    print("   Condici√≥n: saldo_pendiente > 0.01")
    
    if saldo_neto > 0.01:
        interes = saldo_neto * 0.0129  # Asumiendo tasa 1.29%
        print(f"   ‚úÖ GENERA INTER√âS: ${interes:.2f}")
        print(f"   Raz√≥n: Saldo neto ${saldo_neto:.2f} > $0.01")
    else:
        print(f"   ‚ùå NO GENERA INTER√âS")
        print(f"   Raz√≥n: Saldo neto ${saldo_neto:.2f} ‚â§ $0.01")
    
    print("\nüìã L√ìGICA SQL EQUIVALENTE:")
    print("""
    WITH saldos_apartamento AS (
        SELECT 
            apartamento_id,
            SUM(CASE 
                WHEN tipo_movimiento = 'DEBITO' THEN monto 
                ELSE -monto 
            END) as saldo_pendiente
        FROM registro_financiero_apartamento
        WHERE apartamento_id = 20
        AND fecha_efectiva <= '2025-01-31'
        AND concepto no es de inter√©s
        GROUP BY apartamento_id
        HAVING saldo_pendiente > 0.01
    )
    
    Resultado: apartamento_id=20, saldo_pendiente=0.00
    No cumple HAVING saldo_pendiente > 0.01
    """)
    
    print("\n‚úÖ RESULTADO ESPERADO:")
    print("   El apartamento 20 NO deber√≠a generar inter√©s en febrero 2025")
    print("   porque su saldo neto al 31/01/2025 es $0.00")
    
    print("\nüîß CORRECCI√ìN APLICADA:")
    print("   - Cambiado condici√≥n WHERE para usar fecha_efectiva <= fecha_limite")
    print("   - Eliminada suma incorrecta de a√±o+mes")
    print("   - Mantenida exclusi√≥n de conceptos de inter√©s")
    
    print("="*80)

def test_otros_escenarios():
    """Prueba otros escenarios para validar la l√≥gica"""
    
    print("\nüß™ OTROS ESCENARIOS DE PRUEBA:")
    
    escenarios = [
        {
            'nombre': 'Solo D√âBITO sin pago',
            'movimientos': [('DEBITO', 72000)],
            'esperado': 'S√ç genera inter√©s'
        },
        {
            'nombre': 'D√âBITO con pago parcial',
            'movimientos': [('DEBITO', 72000), ('CREDITO', 36000)],
            'esperado': 'S√ç genera inter√©s (sobre $36,000)'
        },
        {
            'nombre': 'D√âBITO con pago completo',
            'movimientos': [('DEBITO', 72000), ('CREDITO', 72000)],
            'esperado': 'NO genera inter√©s'
        },
        {
            'nombre': 'D√âBITO con sobrepago',
            'movimientos': [('DEBITO', 72000), ('CREDITO', 80000)],
            'esperado': 'NO genera inter√©s (saldo negativo)'
        }
    ]
    
    for i, escenario in enumerate(escenarios, 1):
        saldo = sum(monto if tipo == 'DEBITO' else -monto for tipo, monto in escenario['movimientos'])
        genera_interes = saldo > 0.01
        interes = saldo * 0.0129 if genera_interes else 0
        
        print(f"\n   {i}. {escenario['nombre']}:")
        print(f"      Saldo neto: ${saldo:,.2f}")
        print(f"      Genera inter√©s: {'S√ç' if genera_interes else 'NO'}")
        if genera_interes:
            print(f"      Inter√©s: ${interes:,.2f}")
        print(f"      Esperado: {escenario['esperado']}")

if __name__ == "__main__":
    test_escenario_especifico()
    test_otros_escenarios()
